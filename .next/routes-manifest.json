{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/dashboard/beads/[id]",
      "regex": "^/dashboard/beads/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/dashboard/beads/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/dashboard/charms/[charmsId]",
      "regex": "^/dashboard/charms/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcharmsId": "nxtPcharmsId"
      },
      "namedRegex": "^/dashboard/charms/(?<nxtPcharmsId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/dashboard/thread/[id]",
      "regex": "^/dashboard/thread/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/dashboard/thread/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/social-share/[type]/[slug]",
      "regex": "^/social\\-share/([^/]+?)/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtype": "nxtPtype",
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/social\\-share/(?<nxtPtype>[^/]+?)/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/dashboard/about",
      "regex": "^/dashboard/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/about(?:/)?$"
    },
    {
      "page": "/dashboard/account",
      "regex": "^/dashboard/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/account(?:/)?$"
    },
    {
      "page": "/dashboard/change",
      "regex": "^/dashboard/change(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/change(?:/)?$"
    },
    {
      "page": "/dashboard/charms",
      "regex": "^/dashboard/charms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/charms(?:/)?$"
    },
    {
      "page": "/dashboard/charms/charms-upload",
      "regex": "^/dashboard/charms/charms\\-upload(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/charms/charms\\-upload(?:/)?$"
    },
    {
      "page": "/dashboard/charms/thred-charm",
      "regex": "^/dashboard/charms/thred\\-charm(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/charms/thred\\-charm(?:/)?$"
    },
    {
      "page": "/dashboard/contact-us",
      "regex": "^/dashboard/contact\\-us(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/contact\\-us(?:/)?$"
    },
    {
      "page": "/dashboard/contact-us/privacy-policy",
      "regex": "^/dashboard/contact\\-us/privacy\\-policy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/contact\\-us/privacy\\-policy(?:/)?$"
    },
    {
      "page": "/dashboard/faq",
      "regex": "^/dashboard/faq(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/faq(?:/)?$"
    },
    {
      "page": "/dashboard/profile",
      "regex": "^/dashboard/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/profile(?:/)?$"
    },
    {
      "page": "/dashboard/profile/update",
      "regex": "^/dashboard/profile/update(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/profile/update(?:/)?$"
    },
    {
      "page": "/dashboard/thread",
      "regex": "^/dashboard/thread(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/thread(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/sign-in",
      "regex": "^/sign\\-in(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sign\\-in(?:/)?$"
    },
    {
      "page": "/sign-up",
      "regex": "^/sign\\-up(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sign\\-up(?:/)?$"
    },
    {
      "page": "/terms-and-conditions",
      "regex": "^/terms\\-and\\-conditions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms\\-and\\-conditions(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}